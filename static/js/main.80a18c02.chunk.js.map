{"version":3,"sources":["description/snowflake.svg","components/Accueil/Accueil.js","utils/utils.js","components/NavBar/NavBar.js","components/Popups/Popups.js","components/CustomerData/CustomerData.js","components/MissedPayments/MissedPayments.js","components/DayData/DayData.js","components/PageData/PageData.js","components/DayForm/DayForm.js","components/EventForm/EventForm.js","components/Marche/Marche.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Accueil","props","className","src","logo","alt","lastId","newId","prefix","zip","arr1","arr2","map","k","i","NavBar","buttons","value","index","key","onClick","callBack","fa","content","Popups","messageIds","messages","messageId","message","type","title","CustomerData","customers","Object","keys","customerId","paidTotal","suppliedTotal","MissedPayments","missedPayments","DayData","day","dailyAccounting","dayName","dailyLoss","tombolaTickets","getTicketSold","customersAverage","obtainedAverage","PageData","days","costTotal","supplierTotal","ticketPrice","getTombolaSold","soldTickets","values","length","dayIndex","dailyArray","totalSpendings","totalObtained","totalCustomers","getStats","DayForm","dayRawData","save","useState","concat","setCustomers","newCustomer","setNewCustomer","suppliers","setSuppliers","newSupplier","setNewSupplier","useEffect","saveRow","local","newCustomerlocal","push","newSupplierlocal","setCustomerValue","colIndex","localCustomers","localNewCustomer","setSupplierValue","localSuppliers","localNewSupplier","onKeyDown","e","customer","pattern","onChange","event","target","supplier","EventForm","eventExpenses","dayList","eventExpensesState","setEventExpensesState","ticketP","setTicketP","dailyAccountingState","setDailyAccountingState","EXPENSE_TYPES","getTombolaTicketValue","getExpenseValue","expense","accountingState","assign","setExpense","Number","dailyState","setTombolaTickets","Marche","setDayRawData","data","a","daysRawData","state","setState","_addMessage","duration","id","popupIds","popups","setTimeout","newPopupIds","filter","filterId","newPopups","_processDays","entries","dayRaw","result","_computeDay","forEach","val","total","rawCustomers","rawSuppliers","rawCustomer","paid","supplied","name","price","supplierId","rawSupplier","_computeDailyStats","customersTotal","obtainedTotal","customerKeys","customerPaid","customerSupplied","balance","onFileInputChange","files","file","includes","onEventFormSave","_computeResults","resetFiles","fromEntries","DAYS","Array","fill","showDayForm","toggleReset","toggleDay","isSameDay","resetRequested","toggleEventForm","isOpen","showForm","_toggleHelp","displayHelp","this","resetButtons","_getButtons","href","React","Component","App","open","menu","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.80a18c02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snowflake.c1c98c92.svg\";","import React from \"react\";\r\nimport logo from \"../../description/snowflake.svg\";\r\nimport \"./Accueil.css\";\r\n\r\nfunction Accueil(props) {\r\n\r\n    return (\r\n        <div className=\"accueil noselect\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <p>Marché de Noël</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accueil;\r\n","let lastId = 0;\r\n\r\nexport { newId, times, zip }\r\n\r\nfunction newId(prefix='id') {\r\n    lastId++;\r\n    return `${prefix}${lastId}`;\r\n}\r\nfunction times(x) {\r\n    return (f) => {\r\n        if (x > 0) {\r\n            f()\r\n            times (x - 1) (f)\r\n        }\r\n    }\r\n}\r\n\r\nfunction zip(arr1, arr2) {\r\n    return arr1.map((k, i) => [k, arr2[i]]);\r\n}\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar({ buttons=[] }) {\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            {buttons.map((value, index) => {\r\n                return (\r\n                    <div key={index} className={`nav-button clickable noselect ${value.className}`} onClick={value.callBack}>\r\n                        <span>{value.fa && <i className={`fa ${value.fa} inline spaced`}/>}<span className=\"inline\">{value.content}</span></span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./Popups.css\";\r\n\r\nfunction Popups({ messageIds, messages }) {\r\n\r\n    return (\r\n        <div className=\"popups\">\r\n            {messageIds.map((messageId) => {\r\n                const message = messages[messageId];\r\n                return (\r\n                    <div key={messageId} className={\"popup \" + message.type}>\r\n                        <span>{message.title}</span>\r\n                        {message.content}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popups;\r\n","import React from \"react\";\r\nimport \"./CustomerData.css\";\r\n\r\n/*\r\n *\r\n * customers = { clientId: { supplied , paid, total } }\r\n * supplied = [ {name: 'itemName', 'price': price, 'supplierId': id } ] WHAT IS PAID\r\n * paid = [ {name: 'itemName', 'price': price, 'supplierId': id } ]\r\n */\r\nfunction CustomerData({ customers }) {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Liste Client:</h2>\r\n            {Object.keys(customers).map(customerId => {\r\n                return (\r\n                    <div className=\"entry\" key={'cust_'+customerId}>\r\n                        <span>[client: {customerId}] - </span>\r\n                        <span>total payé: {customers[customerId].paidTotal}€</span>\r\n                        <span> | </span>\r\n                        <span>a reçu pour un total de: {customers[customerId].suppliedTotal}€</span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerData;","import React from \"react\";\r\nimport \"./MissedPayments.css\";\r\n\r\n/*\r\n *\r\n */\r\nfunction MissedPayments({ missedPayments }) {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Paiements incorrectes:</h2>\r\n            {Object.keys(missedPayments).map(customerId => {\r\n                return (\r\n                    <div className=\"entry\" key={'missed_'+customerId}>\r\n                        <span>[client: {customerId}] - </span>\r\n                        <span>Argent Manquant: {missedPayments[customerId]}€</span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MissedPayments;","import React from \"react\";\r\nimport \"./DayData.css\";\r\nimport CustomerData from '../CustomerData/CustomerData.js';\r\nimport MissedPayments from '../MissedPayments/MissedPayments.js';\r\n\r\n/*\r\n * Represents a single day.\r\n *\r\n */\r\nfunction DayData({ day, index, dailyAccounting }) {\r\n\r\n    function getTicketSold(day) {\r\n        return dailyAccounting[day] && dailyAccounting[day].tombolaTickets;\r\n    }\r\n\r\n    return (\r\n        <div className=\"day\" key={index}>\r\n            <h1>{day.dayName}</h1>\r\n            <div className=\"day-data\">\r\n                <div>Total des paiements manqués: {day.dailyLoss}€</div>\r\n                <div>Tickets de tombola vendus: {getTicketSold(day.dayName)}</div>\r\n                <div>Moyenne des dépenses des clients: {day.customersAverage}€</div>\r\n                <div>Moyenne des objets reçu par les clients: {day.obtainedAverage}€</div>\r\n                <CustomerData customers={day.customers}/>\r\n                <MissedPayments missedPayments={day.missedPayments}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayData;\r\n","import React from \"react\";\r\nimport \"./PageData.css\";\r\n\r\nimport DayData from '../DayData/DayData.js';\r\n\r\n/*\r\n * Represents a whole page of data for all the uploaded days.\r\n *\r\n */\r\nfunction PageData({ days, costTotal, supplierTotal, dailyAccounting, ticketPrice }) {\r\n\r\n    function getStats() {\r\n        const dailyArray = Object.values(days);\r\n        let totalSpendings = 0;\r\n        let totalObtained = 0;\r\n        let totalCustomers = 0;\r\n        for (const day of dailyArray) {\r\n            totalSpendings += day.customersAverage || 0;\r\n            totalObtained += day.obtainedAverage || 0;\r\n            totalCustomers += Object.keys(day.customers).length;\r\n        }\r\n        return (\r\n            <div className=\"daily-stats\">\r\n                <div><span>Moyenne payée par les clients:</span> <span className=\"value-display\">{totalSpendings / (dailyArray.length || 1)}€</span></div>\r\n                <div><span>Moyenne des articles reçu:</span> <span className=\"value-display\">{totalObtained / (dailyArray.length || 1)}€</span></div>\r\n                <div><span>Tickets de tombola Vendus:</span> <span className=\"value-display\">{getTombolaSold()}</span></div>\r\n                <div><span>Quantité de fiches payées:</span> <span className=\"value-display\">{totalCustomers}</span></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function getTombolaSold() {\r\n        let soldTickets = 0;\r\n        for (const value of Object.values(dailyAccounting)) {\r\n            soldTickets += value.tombolaTickets || 0;\r\n        }\r\n        return soldTickets;\r\n    }\r\n\r\n    function computeTotal() {\r\n        return (supplierTotal + (ticketPrice * (getTombolaSold()))) - costTotal;\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"global-stats\">\r\n                <h3>Bénéfices</h3>\r\n                <div><span>Bénéfices des vendeurs:</span> <span className=\"value-display\">{supplierTotal}€</span></div>\r\n                <div><span>Vente de tombola:</span></div>\r\n                <div><span>{getTombolaSold()} x {ticketPrice}€: </span><span className=\"value-display\">{ticketPrice * (getTombolaSold())}€ </span></div>\r\n                <div><span><i className=\"fa fa-minus icon\"/>Total des frais: </span><span className=\"value-display\">{costTotal}€</span></div>\r\n                <div className=\"separated\"><span>Bénéfices net du marché: </span><span className=\"value-display\">{computeTotal()}€</span></div>\r\n                {!!days.length &&\r\n                    <span className=\"divider\">_________________________________________________________</span>\r\n                }\r\n                {days.map((value, dayIndex) => {\r\n                    return(<DayData day={value} key={dayIndex} dailyAccounting={dailyAccounting} index={dayIndex}/>)\r\n                })}\r\n            </div>\r\n            <div className=\"global-stats\">\r\n            <h3>Statistiques (sur {days.length} jour(s))</h3>\r\n                {getStats()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./DayForm.css\";\r\n\r\n/*\r\n * dayRawData = { customers: [], suppliers: [] }\r\n */\r\nfunction DayForm({ day, dayRawData = {}, save }) {\r\n\r\n    const [customers, setCustomers] = useState([].concat(dayRawData.customers));\r\n    const [newCustomer, setNewCustomer] = useState([]);\r\n    const [suppliers, setSuppliers] = useState([].concat(dayRawData.suppliers));\r\n    const [newSupplier, setNewSupplier] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // willMount\r\n        return () => {\r\n            // willUnMount\r\n            //save(day, { customers, suppliers });\r\n        }\r\n    }, [save, day, customers, suppliers]);\r\n\r\n    const saveRow = (type) => {\r\n        let local;\r\n\r\n        if (type === 'customer') {\r\n            const newCustomerlocal = newCustomer;\r\n            setNewCustomer(['', '', '', '']);\r\n            local = customers;\r\n            local.push(newCustomerlocal)\r\n            setCustomers(local);\r\n        }\r\n        if (type === 'supplier') {\r\n            const newSupplierlocal = newSupplier;\r\n            setNewSupplier(['', '', '', '']);\r\n            local = suppliers;\r\n            local.push(newSupplierlocal)\r\n            setSuppliers(local);\r\n        }\r\n        save(day, { customers, suppliers });\r\n    }\r\n\r\n    const setCustomerValue = (index, colIndex, value) => {\r\n        const localCustomers = customers || [];\r\n\r\n        if (index === false) {\r\n            const localNewCustomer = newCustomer.map(value => value || '');\r\n            localNewCustomer[colIndex] = value;\r\n            setNewCustomer(localNewCustomer)\r\n            return;\r\n        }\r\n\r\n        if (!localCustomers[index]) {\r\n            localCustomers[index] = [];\r\n        }\r\n        localCustomers[index][colIndex] = value;\r\n        setCustomers(localCustomers);\r\n        save(day, { customers, suppliers });\r\n    }\r\n\r\n    const setSupplierValue = (index, colIndex, value) => {\r\n        const localSuppliers = suppliers || [];\r\n\r\n        if (index === false) {\r\n            const localNewSupplier = newSupplier.map(value => value || '');;\r\n            localNewSupplier[colIndex] = value;\r\n            setNewSupplier(localNewSupplier)\r\n            return;\r\n        }\r\n\r\n        if (!localSuppliers[index]) {\r\n            localSuppliers[index] = [];\r\n        }\r\n        localSuppliers[index][colIndex] = value;\r\n        setSuppliers(localSuppliers);\r\n        save(day, { customers, suppliers });\r\n    }\r\n\r\n    const cKeyDownHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            saveRow('customer');\r\n        }\r\n    }\r\n\r\n    const sKeyDownHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            saveRow('supplier');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content input-page\">\r\n            <h1>{day}</h1>\r\n            <div className=\"area-container\">\r\n                <div onKeyDown={cKeyDownHandler} className=\"group-input customers\">\r\n                    <div className=\"col-titles\">\r\n                        <div className=\"number\">Client</div><div className=\"number\">Fournisseur</div><div className=\"string\">Article</div><div className=\"number\">Prix</div>\r\n                    </div>\r\n                    {customers.map((customer, index) => {\r\n                        return (\r\n                            <div className=\"customer-row row\" key={'customer_'+index}>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(index, 0, event.target.value) }} value={customer[0]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(index, 1, event.target.value) }} value={customer[1]}/>\r\n                                <input className=\"string-input\" onChange={event => { setCustomerValue(index, 2, event.target.value) }} value={customer[2]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(index, 3, event.target.value) }} value={customer[3]}/>€\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"customer-row row\">\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(false, 0, event.target.value) }} value={newCustomer[0]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(false, 1, event.target.value) }} value={newCustomer[1]}/>\r\n                        <input className=\"string-input\" onChange={event => { setCustomerValue(false, 2, event.target.value) }} value={newCustomer[2]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(false, 3, event.target.value) }} value={newCustomer[3]}/>€\r\n                    </div>\r\n                    <div>\r\n                        appuiez sur 'Entrer' pour sauver la dernière ligne.\r\n                    </div>\r\n                </div>\r\n                <div onKeyDown={sKeyDownHandler} className=\"group-input suppliers\">\r\n                    <div className=\"col-titles\">\r\n                        <div className=\"number\">Fournisseur</div><div className=\"number\">Client</div><div className=\"string\">Article</div><div className=\"number\">Prix</div>\r\n                    </div>\r\n                    {suppliers.map((supplier, index) => {\r\n                        return (\r\n                            <div className=\"supplier-row row\" key={'supplier_'+index}>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(index, 0, event.target.value) }} value={supplier[0]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(index, 1, event.target.value) }} value={supplier[1]}/>\r\n                                <input className=\"string-input\" onChange={event => { setSupplierValue(index, 2, event.target.value) }} value={supplier[2]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(index, 3, event.target.value) }} value={supplier[3]}/>€\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"supplier-row row\">\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(false, 0, event.target.value) }} value={newSupplier[0]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(false, 1, event.target.value) }} value={newSupplier[1]}/>\r\n                        <input className=\"string-input\" onChange={event => { setSupplierValue(false, 2, event.target.value) }} value={newSupplier[2]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(false, 3, event.target.value) }} value={newSupplier[3]}/>€\r\n                    </div>\r\n                    <div>\r\n                        appuiez sur 'Entrer' pour sauver la dernière ligne.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayForm;","import React, { useState, useEffect } from \"react\";\r\nimport \"./EventForm.css\";\r\n\r\n/*\r\n * All the inputs to register the expenses of the event.\r\n */\r\nfunction EventForm({ eventExpenses, dailyAccounting, ticketPrice, dayList, save }) {\r\n\r\n    const [eventExpensesState, setEventExpensesState] = useState(eventExpenses || {});\r\n    const [ticketP, setTicketP] = useState(ticketPrice || 0);\r\n    const [dailyAccountingState, setDailyAccountingState] = useState(dailyAccounting || {});\r\n\r\n    // the names are only relevant in this context, the parent component will just make a sum of all those expenses.\r\n    const EXPENSE_TYPES = ['Salle', 'Transactions', 'Assurance', 'Papeterie', 'Timbres', 'Courses', 'Traiteur', 'Schmitz', 'Autre'];\r\n\r\n    useEffect(() => {\r\n        // willMount\r\n        return () => {\r\n            // willUnMount\r\n            save({\r\n                eventExpenses: eventExpensesState,\r\n                ticketPrice: ticketP,\r\n                dailyAccounting: dailyAccountingState,\r\n            });\r\n        }\r\n    }, [save, eventExpensesState, ticketP, dailyAccountingState]);\r\n\r\n    function setTombolaTickets(day, value) {\r\n        const dailyState = Object.assign({}, dailyAccountingState);\r\n        if (!dailyState[day]) {\r\n            dailyState[day] = {};\r\n        }\r\n\r\n        dailyState[day].tombolaTickets = value;\r\n        setDailyAccountingState(dailyState);\r\n    }\r\n\r\n    function getTombolaTicketValue(day) {\r\n        if (dailyAccountingState && dailyAccountingState[day]) {\r\n            return dailyAccountingState[day].tombolaTickets || 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function setExpense(expense, value) {\r\n        const accountingState = Object.assign({}, eventExpensesState);\r\n        accountingState[expense] = value;\r\n        setEventExpensesState(accountingState);\r\n    }\r\n\r\n    function getExpenseValue(expense) {\r\n        return eventExpensesState[expense] || 0;\r\n    }\r\n\r\n    function renderEventExpenses() {\r\n        return (\r\n            <div className=\"input-grid left\">\r\n                {EXPENSE_TYPES.map(expense => {\r\n                    return (\r\n                        <div>\r\n                            <span className=\"accounting-span\">{expense}: </span>\r\n                            <input className=\"accounting-input\" onChange={event => { setExpense(expense, Number(event.target.value)) }} pattern=\"[0-9]*\" type=\"number\" value={getExpenseValue(expense)}/> €\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDailyAccounting() {\r\n        return (\r\n            <div className=\"input-grid right\">\r\n                <div>\r\n                    <span className=\"accounting-span\"> Prix des tickets: </span>\r\n                    <input className=\"accounting-input\" onChange={event => { setTicketP(Number(event.target.value)) }} pattern=\"[0-9]*\" type=\"number\" value={ticketP}/>€\r\n                </div>\r\n                {dayList.map(day => {\r\n                    return(<div>\r\n                        <h3>{day}</h3>\r\n                        <div>\r\n                            <span className=\"accounting-span\"> Tickets de tombola: </span>\r\n                            <input className=\"accounting-input\" onChange={event => { setTombolaTickets(day, Number(event.target.value)) }} pattern=\"[0-9]*\" type=\"number\" value={getTombolaTicketValue(day)}/>\r\n                        </div>\r\n                    </div>\r\n                )})}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"form\">\r\n                {renderEventExpenses()}\r\n                {renderDailyAccounting()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventForm;\r\n","import React from 'react';\r\nimport './Marche.css';\r\n\r\nimport { newId, zip } from '../../utils/utils.js';\r\nimport NavBar from '../NavBar/NavBar.js';\r\nimport Popups from '../Popups/Popups.js';\r\nimport PageData from '../PageData/PageData.js';\r\nimport DayForm from '../DayForm/DayForm.js';\r\nimport EventForm from '../EventForm/EventForm.js';\r\n\r\nclass Marche extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.DAYS = ['Vendredi', 'Samedi', 'Dimanche']; // const\r\n        this.state = {\r\n            files: {}, // { dayName: file, }\r\n            daysRawData: Object.fromEntries(zip(this.DAYS, Array(3).fill({'customers': [], 'suppliers': []}))),\r\n            days: [], // { dayName, customers, missedPayments, dailyLoss, customersAverage, obtainedAverage }\r\n            suppliers: {}, // { supplierId : { total } }\r\n            resetRequested: false, // toggle for the confirm/cancel buttons for removing files\r\n            showForm: false, // toggle for the accounting/event input form\r\n            showDayForm: false, // false or this.DAYS[*]\r\n            displayHelp: false, // toggle the \"help\" box\r\n            eventExpenses: {}, // {expenseName: <int>amount}\r\n            dailyAccounting: {}, // { dayName: {valuesDict} }\r\n            supplierTotal: 0,\r\n            costTotal: 0,\r\n            ticketPrice: 0,\r\n            popupIds: [],\r\n            popups: {}, // {content, type}\r\n        };\r\n    }\r\n    setDayRawData = async (day, data) => {\r\n        const daysRawData = Object.assign({}, this.state.daysRawData);\r\n        daysRawData[day] = data;\r\n        await this.setState({ daysRawData });\r\n    }\r\n    /**\r\n     *\r\n     * @param {String} title\r\n     * @param {String} content text content of the message\r\n     * @param {String} [type] info | error\r\n     * @param {Number} [duration] amount of ms\r\n     */\r\n    _addMessage = async (title, content, type, duration) => {\r\n        duration = duration || 5000;\r\n        type = type || 'info';\r\n        const id = newId('message');\r\n        await this.setState({\r\n            popupIds: this.state.popupIds.concat(id),\r\n            popups: Object.assign({}, this.state.popups, {\r\n                [id]: {\r\n                    title,\r\n                    content,\r\n                    type,\r\n                },\r\n            }),\r\n        });\r\n        setTimeout(async () => {\r\n            const newPopupIds = this.state.popupIds.filter((filterId) => {\r\n                return filterId !== id;\r\n            });\r\n            const newPopups = Object.assign({}, this.state.popups);\r\n            delete newPopups[id];\r\n            await this.setState({\r\n                popupIds: newPopupIds,\r\n                popups: newPopups,\r\n            });\r\n        }, duration);\r\n    }\r\n    /**\r\n     * Extracts values from day raw data.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    _processDays = async () => {\r\n        const days = [];\r\n        let suppliers = {};\r\n        let supplierTotal = 0;\r\n        for (const [dayName, dayRaw] of Object.entries(this.state.daysRawData)) {\r\n            const result = this._computeDay({ dayName, dayRaw, suppliers });\r\n            suppliers = result.suppliers;\r\n            days.push(result.day);\r\n        }\r\n        Object.values(suppliers).forEach(val => supplierTotal += val.total);\r\n        return { days, suppliers, supplierTotal };\r\n    }\r\n    /**\r\n     *\r\n     * @param {Object} param0\r\n     * @param {String} param0.dayName\r\n     * @param {Object} param0.dayRaw\r\n     * @param {Object} param0.suppliers\r\n     */\r\n    _computeDay = ({ dayName, dayRaw, suppliers }) => {\r\n\r\n            /* DATA FILL\r\n            *   paid\r\n            *   rawCustomers[*][0] purchase - customerId\r\n            *   rawCustomers[*][1] purchase - supplierId\r\n            *   rawCustomers[*][2] purchase - item Name\r\n            *   rawCustomers[*][3] purchase - item Price\r\n            *   supplied\r\n            *   rawSuppliers[*][0] payment - supplierId\r\n            *   rawSuppliers[*][1] payment - customerId\r\n            *   rawSuppliers[*][2] payment - item Name\r\n            *   rawSuppliers[*][3] payment - item Price\r\n            */\r\n            const rawCustomers = dayRaw.customers;\r\n            const rawSuppliers = dayRaw.suppliers;\r\n            const customers = {};\r\n\r\n            for (const rawCustomer of rawCustomers) {\r\n                if (rawCustomer[0]) { // CUSTOMER SIDE\r\n                    // creates the customer if it doesn't already exist.\r\n                    customers[rawCustomer[0]] = customers[rawCustomer[0]] || {\r\n                        paid: [],\r\n                        paidTotal: 0,\r\n                        supplied: [],\r\n                        suppliedTotal: 0,\r\n                    };\r\n                    // adds the total paid by the customer\r\n                    customers[rawCustomer[0]].paidTotal += Number(rawCustomer[3]) || 0;\r\n                    // adds a line for what the customer paid\r\n                    customers[rawCustomer[0]].paid.push({\r\n                        name: rawCustomer[2],\r\n                        price: rawCustomer[3],\r\n                        supplierId: rawCustomer[1],\r\n                    });\r\n                }\r\n            }\r\n            for (const rawSupplier of rawSuppliers) {\r\n                if (rawSupplier[0] && rawSupplier[1]) { // SUPPLIER SIDE\r\n                    customers[rawSupplier[1]] = customers[rawSupplier[1]] || {\r\n                        paid: [],\r\n                        paidTotal: 0,\r\n                        supplied: [],\r\n                        suppliedTotal: 0,\r\n                    };\r\n                    // adds the total paid by the customer\r\n                    customers[rawSupplier[1]].suppliedTotal += Number(rawSupplier[3]) || 0;\r\n                    // adds a line for what the customer recieved (not a guarantee of payment)\r\n                    customers[rawSupplier[1]].supplied.push({\r\n                        name: rawSupplier[2],\r\n                        price: rawSupplier[3],\r\n                        supplierId: rawSupplier[0],\r\n                    });\r\n                    // computes the total value of supplied by the supplier.\r\n                    suppliers[rawSupplier[0]] = suppliers[rawSupplier[0]] || { total: 0 };\r\n                    suppliers[rawSupplier[0]].total += Number(rawSupplier[3]) || 0;\r\n                }\r\n            }\r\n\r\n        const { missedPayments, dailyLoss, customersAverage, obtainedAverage } = this._computeDailyStats(customers);\r\n        return {day: { dayName, customers, missedPayments, dailyLoss, customersAverage, obtainedAverage }, suppliers };\r\n    }\r\n    _computeDailyStats = (customers) => {\r\n        const missedPayments = {};\r\n        let dailyLoss = 0;\r\n        let customersTotal = 0;\r\n        let obtainedTotal = 0;\r\n        const customerKeys = Object.keys(customers);\r\n        for (const customerId of customerKeys) {\r\n            const customerPaid = customers[customerId].paidTotal;\r\n            const customerSupplied = customers[customerId].suppliedTotal;\r\n            const balance =  customerSupplied - customerPaid;\r\n            obtainedTotal += Number(customerSupplied);\r\n            customersTotal += Number(customerPaid);\r\n            if (balance !== 0) {\r\n                missedPayments[customerId] = balance;\r\n                dailyLoss += balance;\r\n            }\r\n        }\r\n        const customersAverage = customersTotal / (customerKeys.length || 0);\r\n        const obtainedAverage = obtainedTotal / (customerKeys.length || 0);\r\n        return { missedPayments, dailyLoss, customersTotal, customersAverage, obtainedAverage };\r\n    }\r\n    /**\r\n    * Brief description of the function here.\r\n    *\r\n    * @return {Object[]} [{content, className, fa, callBack}]\r\n    */\r\n    _getButtons() {\r\n\r\n        // MAIN\r\n        const buttons = [\r\n            {className: ((this.state.showForm ? 'active' : '') + ' purple'), fa: 'fa-eur', content: 'Comptabilité', callBack: this.toggleEventForm},\r\n        ]\r\n\r\n        // ADD DAYS\r\n        /*\r\n        for (const day of this.DAYS) {\r\n            buttons.push({\r\n                className: (this.state.files[day] ? 'green' : 'alert'),\r\n                fa: 'fa-upload',\r\n                callBack: (e) => {\r\n                    // allows clicking on the file input from the outside element.\r\n                    const input = e.currentTarget.getElementsByTagName('input');\r\n                    if (input.length) {\r\n                        input[0].click();\r\n                    }\r\n                },\r\n                content: (<FileInput label={day}\r\n                    className=\"noselect\"\r\n                    value={this.state.files[day]}\r\n                    onChange={val => {this.onFileInputChange(val, day)}} />\r\n                ),\r\n            });\r\n        }\r\n        */\r\n\r\n        // ADD DAYS\r\n        for (const day of this.DAYS) {\r\n            buttons.push({\r\n                className: ((this.state.showDayForm === day ? 'active' : '') + ' green'),\r\n                fa: 'fa-calendar',\r\n                callBack: () => { this.toggleDay(day) },\r\n                content: day,\r\n            });\r\n        }\r\n\r\n        // REMOVE FILES\r\n        let resetButtons = [{content: 'Retirer les jours', fa: 'fa-trash', className: 'warning', callBack: this.toggleReset}];\r\n        if (this.state.resetRequested) {\r\n            resetButtons = [\r\n                {content: 'Annuler', fa: 'fa-times', className: 'green', callBack: this.toggleReset},\r\n                {content: 'Confirmer', fa: 'fa-check', className: 'alert', callBack: this.resetFiles},\r\n            ];\r\n        }\r\n        buttons.push(...resetButtons);\r\n\r\n        // COMPUTE\r\n        if (Object.keys(this.state.daysRawData).length && !this.state.showForm && !this.state.resetRequested) {\r\n            buttons.push({ content: 'Calculer', fa: 'fa-plus', className: 'green', callBack: this._computeResults });\r\n        }\r\n\r\n        buttons.push({ content: 'Aide', fa: 'fa-info-circle', className: 'green order-2 ml-auto', callBack: this._toggleHelp });\r\n        return buttons;\r\n    }\r\n\r\n    ////////////////// //////// //////////////////\r\n    ////////////////// HANDLERS //////////////////\r\n    ////////////////// //////// //////////////////\r\n\r\n    /**\r\n    * Handler for File Input onChange.\r\n    *\r\n    * @param {file[]} files\r\n    * @return {void}\r\n    */\r\n   onFileInputChange = async (files, name) => {\r\n        const file = files[0];\r\n        if (!file.name.includes('.csv')) {\r\n            this._addMessage('ERREUR', 'Le fichier doit être un .csv', 'error', 8000);\r\n            return;\r\n        }\r\n        await this.setState({ files: Object.assign({}, this.state.files, {[name]: file})});\r\n    }\r\n    /**\r\n    * Handler for event form.\r\n    */\r\n    onEventFormSave = async ({ eventExpenses, dailyAccounting, ticketPrice }) => {\r\n        let costTotal = 0;\r\n        Object.values(eventExpenses).forEach(val => costTotal += val);\r\n        await this.setState({ eventExpenses, ticketPrice, dailyAccounting, costTotal });\r\n    }\r\n    /**\r\n    * processes the files and updates the state.\r\n    */\r\n    _computeResults = async () => {\r\n        const { days, suppliers, supplierTotal } = await this._processDays();\r\n        await this.setState({ days, suppliers, supplierTotal });\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    resetFiles = async () => {\r\n        await this.setState({daysRawData: Object.fromEntries(zip(this.DAYS, Array(3).fill({'customers': [], 'suppliers': []}))), showDayForm: false});\r\n        this.toggleReset();\r\n    }\r\n    /**\r\n    *\r\n    */\r\n   toggleDay = async (day) => {\r\n        const isSameDay = this.state.showDayForm === day;\r\n        await this.setState({ showDayForm: false });\r\n        if (!isSameDay) {\r\n            await this.setState({ showDayForm: day });\r\n        }\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    toggleReset = async () => {\r\n        await this.setState({ resetRequested: !this.state.resetRequested });\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    toggleEventForm = async () => {\r\n        const isOpen = this.state.showForm;\r\n        await this.setState({ showForm: !isOpen });\r\n        if (isOpen) {\r\n            this._computeResults();\r\n        }\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    _toggleHelp = async () => {\r\n        await this.setState({ displayHelp: !this.state.displayHelp });\r\n    }\r\n    /**\r\n     * add encodage popup with button toggle\r\n     * location salle, location bancontact et frais de transaction, assurance, papetrie, timbres, courses restaurant, traiteur, schmitz\r\n     * form component with callback to change state here with new data.\r\n     *\r\n     * Add full data (all prices + price computation)\r\n     *\r\n     */\r\n    render() {\r\n        return <div>\r\n            <NavBar\r\n                buttons={this._getButtons()}\r\n            />\r\n            {!!this.state.popupIds.length &&\r\n                <Popups messageIds={this.state.popupIds} messages={this.state.popups}/>\r\n            }\r\n            {!! this.state.displayHelp &&\r\n                <div className=\"help\">\r\n                    <div className=\"help-link ml-auto\">\r\n                        <a className=\"help-text\" target=\"new\" href=\"https://docs.google.com/spreadsheets/d/1UKT38_RUa3MQ_HEGtWgaPKvedD35wYksaj7-T0sc9N8/edit?usp=sharing\">\r\n                            Fiche à remplire\r\n                        </a>\r\n                        <i className=\"fa fa-file-excel-o\"/>\r\n                    </div>\r\n                    <div className=\"help-link ml-auto\">\r\n                        <a className=\"help-text\" target=\"new\" href=\"https://drive.google.com/file/d/18Cs7Gyetq9kGnfS8gg4BnLfDHVo5YATV/view?usp=sharing\">\r\n                            Vidéo d'explication\r\n                        </a>\r\n                        <i className=\"fa fa-play\"/>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {!!this.DAYS.includes(this.state.showDayForm) && (\r\n                <DayForm day={this.state.showDayForm} dayRawData={this.state.daysRawData[this.state.showDayForm]} save={this.setDayRawData}/>\r\n            )}\r\n            {!!this.state.showForm ? (\r\n                <EventForm\r\n                    eventExpenses={this.state.eventExpenses}\r\n                    dailyAccounting={this.state.dailyAccounting}\r\n                    dayList={this.DAYS}\r\n                    ticketPrice={this.state.ticketPrice}\r\n                    save={this.onEventFormSave}\r\n                />\r\n            ) : (\r\n                <PageData\r\n                    days={this.state.days}\r\n                    dailyAccounting={this.state.dailyAccounting}\r\n                    ticketPrice={this.state.ticketPrice}\r\n                    costTotal={this.state.costTotal}\r\n                    supplierTotal={this.state.supplierTotal}\r\n                />\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Marche;\r\n","import React, { useState } from \"react\";\nimport Accueil from \"./components/Accueil/Accueil.js\";\nimport Marche from \"./components/Marche/Marche.js\";\nimport \"./App.css\";\n\nfunction App(props) {\n    const [state, setState] = useState({ open: false });\n\n    function toggleApp() {\n        setState({ open: !state.open });\n    }\n\n    return (\n        <div className=\"page\">\n            {state.open ? (\n                <div className=\"page\">\n                    <Marche menu=\"\"/>\n                </div>\n            ) : (\n                <div className=\"page clickable\" onClick={toggleApp}>\n                    <Accueil/>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// turn service worker off\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}