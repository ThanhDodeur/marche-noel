{"version":3,"sources":["description/snowflake.svg","components/Accueil/Accueil.js","utils/utils.js","components/NavBar/NavBar.js","components/Popups/Popups.js","components/CustomerData/CustomerData.js","components/MissedPayments/MissedPayments.js","components/DayData/DayData.js","components/PageData/PageData.js","components/FileInput/FileInput.js","components/DayForm/DayForm.js","components/EventForm/EventForm.js","components/Marche/Marche.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Accueil","props","className","src","logo","alt","lastId","newId","prefix","times","x","f","zip","arr1","arr2","map","k","i","NavBar","buttons","value","index","key","onClick","callBack","fa","content","Popups","messageIds","messages","messageId","message","type","title","CustomerData","customers","Object","keys","customerId","paidTotal","suppliedTotal","MissedPayments","missedPayments","DayData","day","dailyAccounting","dayName","dailyLoss","tombolaTickets","getTicketSold","customersAverage","toFixed","obtainedAverage","PageData","days","costTotal","supplierTotal","ticketPrice","getTombolaSold","soldTickets","values","length","dayIndex","dailyArray","totalSpendings","totalObtained","totalCustomers","getStats","defaultChange","FileInput","label","onChange","rest","style","display","e","target","files","DayForm","dayRawData","save","addMessage","useState","concat","setCustomers","newCustomer","setNewCustomer","suppliers","setSuppliers","newSupplier","setNewSupplier","undefined","file","setFile","useEffect","saveRow","local","newCustomerlocal","push","newSupplierlocal","setCustomerValue","colIndex","localCustomers","localNewCustomer","setSupplierValue","localSuppliers","localNewSupplier","onFileInputChange","a","name","includes","_readFile","page","_readPage","newCustomers","newSuppliers","blob","reader","FileReader","readAsText","Promise","resolve","onload","result","_addMessage","lines","split","shift","currentLine","Number","onKeyDown","customer","pattern","event","supplier","EventForm","eventExpenses","dayList","eventExpensesState","setEventExpensesState","ticketP","setTicketP","dailyAccountingState","setDailyAccountingState","EXPENSE_TYPES","getTombolaTicketValue","getExpenseValue","expense","accountingState","assign","setExpense","dailyState","setTombolaTickets","Marche","loadSave","saved","localStorage","getItem","setState","JSON","parse","_computeResults","saveState","setItem","stringify","daysRawData","state","setDayRawData","data","duration","id","popupIds","popups","setTimeout","newPopupIds","filter","filterId","newPopups","_processDays","entries","dayRaw","_computeDay","forEach","val","total","rawCustomers","rawSuppliers","rawCustomer","paid","supplied","price","supplierId","rawSupplier","_computeDailyStats","customersTotal","obtainedTotal","customerKeys","customerPaid","customerSupplied","balance","onEventFormSave","clearAll","fromEntries","DAYS","Array","fill","showDayForm","toggleReset","toggleDay","isSameDay","resetRequested","toggleEventForm","isOpen","showForm","_toggleHelp","displayHelp","this","resetButtons","_getButtons","href","React","Component","App","open","menu","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2b3f336a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snowflake.c1c98c92.svg\";","import React from \"react\";\r\nimport logo from \"../../description/snowflake.svg\";\r\nimport \"./Accueil.css\";\r\n\r\nfunction Accueil(props) {\r\n\r\n    return (\r\n        <div className=\"accueil noselect\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <p>Marché de Noël</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accueil;\r\n","let lastId = 0;\r\n\r\nexport { newId, times, zip }\r\n\r\nfunction newId(prefix='id') {\r\n    lastId++;\r\n    return `${prefix}${lastId}`;\r\n}\r\nfunction times(x) {\r\n    return (f) => {\r\n        if (x > 0) {\r\n            f()\r\n            times (x - 1) (f)\r\n        }\r\n    }\r\n}\r\n\r\nfunction zip(arr1, arr2) {\r\n    return arr1.map((k, i) => [k, arr2[i]]);\r\n}\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar({ buttons=[] }) {\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            {buttons.map((value, index) => {\r\n                return (\r\n                    <div key={index} className={`nav-button clickable noselect ${value.className}`} onClick={value.callBack}>\r\n                        <span>{value.fa && <i className={`fa ${value.fa} inline spaced`}/>}<span className=\"inline\">{value.content}</span></span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./Popups.css\";\r\n\r\nfunction Popups({ messageIds, messages }) {\r\n\r\n    return (\r\n        <div className=\"popups\">\r\n            {messageIds.map((messageId) => {\r\n                const message = messages[messageId];\r\n                return (\r\n                    <div key={messageId} className={\"popup \" + message.type}>\r\n                        <span>{message.title}</span>\r\n                        {message.content}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popups;\r\n","import React from \"react\";\r\nimport \"./CustomerData.css\";\r\n\r\n/*\r\n *\r\n * customers = { clientId: { supplied , paid, total } }\r\n * supplied = [ {name: 'itemName', 'price': price, 'supplierId': id } ] WHAT IS PAID\r\n * paid = [ {name: 'itemName', 'price': price, 'supplierId': id } ]\r\n */\r\nfunction CustomerData({ customers }) {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Liste Client:</h2>\r\n            {Object.keys(customers).map(customerId => {\r\n                return (\r\n                    <div className=\"entry\" key={'cust_'+customerId}>\r\n                        <span>[client: {customerId}] - </span>\r\n                        <span>total payé: {customers[customerId].paidTotal}€</span>\r\n                        <span> | </span>\r\n                        <span>a reçu pour un total de: {customers[customerId].suppliedTotal}€</span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerData;","import React from \"react\";\r\nimport \"./MissedPayments.css\";\r\n\r\n/*\r\n *\r\n */\r\nfunction MissedPayments({ missedPayments }) {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Paiements incorrectes:</h2>\r\n            {Object.keys(missedPayments).map(customerId => {\r\n                return (\r\n                    <div className=\"entry\" key={'missed_'+customerId}>\r\n                        <span>[client: {customerId}] - </span>\r\n                        <span>Argent Manquant: {missedPayments[customerId]}€</span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MissedPayments;","import React from \"react\";\r\nimport \"./DayData.css\";\r\nimport CustomerData from '../CustomerData/CustomerData.js';\r\nimport MissedPayments from '../MissedPayments/MissedPayments.js';\r\n\r\n/*\r\n * Represents a single day.\r\n *\r\n */\r\nfunction DayData({ day, index, dailyAccounting }) {\r\n\r\n    function getTicketSold(day) {\r\n        return dailyAccounting[day] && dailyAccounting[day].tombolaTickets;\r\n    }\r\n\r\n    return (\r\n        <div className=\"day\" key={index}>\r\n            <h1>{day.dayName}</h1>\r\n            <div className=\"day-data\">\r\n                <div>Total des paiements manqués: {day.dailyLoss}€</div>\r\n                <div>Tickets de tombola vendus: {getTicketSold(day.dayName)}</div>\r\n                <div>Moyenne des dépenses des clients: {(day.customersAverage || 0).toFixed(3)}€</div>\r\n                <div>Moyenne des objets reçu par les clients: {(day.obtainedAverage || 0).toFixed(3)}€</div>\r\n                <CustomerData customers={day.customers}/>\r\n                <MissedPayments missedPayments={day.missedPayments}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayData;\r\n","import React from \"react\";\r\nimport \"./PageData.css\";\r\n\r\nimport DayData from '../DayData/DayData.js';\r\n\r\n/*\r\n * Represents a whole page of data for all the uploaded days.\r\n *\r\n */\r\nfunction PageData({ days, costTotal, supplierTotal, dailyAccounting, ticketPrice }) {\r\n\r\n    function getStats() {\r\n        const dailyArray = Object.values(days);\r\n        let totalSpendings = 0;\r\n        let totalObtained = 0;\r\n        let totalCustomers = 0;\r\n        for (const day of dailyArray) {\r\n            totalSpendings += day.customersAverage || 0;\r\n            totalObtained += day.obtainedAverage || 0;\r\n            totalCustomers += Object.keys(day.customers).length;\r\n        }\r\n        return (\r\n            <div className=\"daily-stats\">\r\n                <div><span>Moyenne payée par les clients:</span> <span className=\"value-display\">{(totalSpendings / (dailyArray.length || 1)).toFixed(3)}€</span></div>\r\n                <div><span>Moyenne des articles reçu:</span> <span className=\"value-display\">{(totalObtained / (dailyArray.length || 1)).toFixed(3)}€</span></div>\r\n                <div><span>Tickets de tombola Vendus:</span> <span className=\"value-display\">{getTombolaSold()}</span></div>\r\n                <div><span>Quantité de fiches payées:</span> <span className=\"value-display\">{totalCustomers}</span></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function getTombolaSold() {\r\n        let soldTickets = 0;\r\n        for (const value of Object.values(dailyAccounting)) {\r\n            soldTickets += value.tombolaTickets || 0;\r\n        }\r\n        return soldTickets;\r\n    }\r\n\r\n    function computeTotal() {\r\n        return (supplierTotal + (ticketPrice * (getTombolaSold()))) - costTotal;\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"global-stats\">\r\n                <h3>Bénéfices</h3>\r\n                <div><span>Bénéfices des vendeurs:</span> <span className=\"value-display\">{supplierTotal}€</span></div>\r\n                <div><span>Vente de tombola:</span></div>\r\n                <div><span>{getTombolaSold()} x {ticketPrice}€: </span><span className=\"value-display\">{ticketPrice * (getTombolaSold())}€ </span></div>\r\n                <div><span><i className=\"fa fa-minus icon\"/>Total des frais: </span><span className=\"value-display\">{costTotal}€</span></div>\r\n                <div className=\"separated\"><span>Bénéfices net du marché: </span><span className=\"value-display\">{computeTotal()}€</span></div>\r\n                {!!days.length &&\r\n                    <span className=\"divider\">_________________________________________________________</span>\r\n                }\r\n                {days.map((value, dayIndex) => {\r\n                    return(<DayData day={value} key={dayIndex} dailyAccounting={dailyAccounting} index={dayIndex}/>)\r\n                })}\r\n            </div>\r\n            <div className=\"global-stats\">\r\n            <h3>Statistiques (sur {days.length} jour(s))</h3>\r\n                {getStats()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageData;\r\n","import React from \"react\";\r\n\r\nconst defaultChange = () => {};\r\n\r\nconst FileInput = ({ value, label='Upload', onChange = defaultChange, ...rest }) => {\r\n    return (\r\n    <span>\r\n        <label>\r\n            <span className=\"clickable\">{label}</span>\r\n            <input\r\n                {...rest}\r\n                style={{ display: \"none\" }}\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                    onChange([...e.target.files]);\r\n                    e.target.value = null;\r\n                }}\r\n            />\r\n        </label>\r\n    </span>\r\n    );\r\n};\r\n\r\nexport default FileInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FileInput from '../FileInput/FileInput.js';\r\nimport { times } from '../../utils/utils.js';\r\nimport \"./DayForm.css\";\r\n\r\n/*\r\n * dayRawData = { customers: [], suppliers: [] }\r\n */\r\nfunction DayForm({ day, dayRawData = {}, save, addMessage }) {\r\n\r\n    const [customers, setCustomers] = useState([].concat(dayRawData.customers));\r\n    const [newCustomer, setNewCustomer] = useState([]);\r\n    const [suppliers, setSuppliers] = useState([].concat(dayRawData.suppliers));\r\n    const [newSupplier, setNewSupplier] = useState([]);\r\n    const [file, setFile] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        // willMount\r\n        return () => {\r\n            // willUnMount\r\n            //save(day, { customers, suppliers });\r\n        }\r\n    }, [save, day, customers, suppliers]);\r\n\r\n    const saveRow = (type) => {\r\n        let local;\r\n\r\n        if (type === 'customer') {\r\n            const newCustomerlocal = newCustomer;\r\n            setNewCustomer(['', '', '', '']);\r\n            local = customers;\r\n            local.push(newCustomerlocal)\r\n            setCustomers(local);\r\n        }\r\n        if (type === 'supplier') {\r\n            const newSupplierlocal = newSupplier;\r\n            setNewSupplier(['', '', '', '']);\r\n            local = suppliers;\r\n            local.push(newSupplierlocal)\r\n            setSuppliers(local);\r\n        }\r\n        save(day, { customers, suppliers });\r\n    }\r\n\r\n    const setCustomerValue = (index, colIndex, value) => {\r\n        const localCustomers = customers || [];\r\n\r\n        if (index === false) {\r\n            const localNewCustomer = newCustomer.map(value => value || '');\r\n            localNewCustomer[colIndex] = value;\r\n            setNewCustomer(localNewCustomer)\r\n            return;\r\n        }\r\n\r\n        if (!localCustomers[index]) {\r\n            localCustomers[index] = [];\r\n        }\r\n        localCustomers[index][colIndex] = value;\r\n        setCustomers(localCustomers);\r\n        save(day, { customers, suppliers });\r\n    }\r\n\r\n    const setSupplierValue = (index, colIndex, value) => {\r\n        const localSuppliers = suppliers || [];\r\n\r\n        if (index === false) {\r\n            const localNewSupplier = newSupplier.map(value => value || '');;\r\n            localNewSupplier[colIndex] = value;\r\n            setNewSupplier(localNewSupplier)\r\n            return;\r\n        }\r\n\r\n        if (!localSuppliers[index]) {\r\n            localSuppliers[index] = [];\r\n        }\r\n        localSuppliers[index][colIndex] = value;\r\n        setSuppliers(localSuppliers);\r\n        save(day, { customers, suppliers });\r\n    }\r\n\r\n    const cKeyDownHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            saveRow('customer');\r\n        }\r\n    }\r\n\r\n    const sKeyDownHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            saveRow('supplier');\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Handler for File Input onChange.\r\n    *\r\n    * @param {file[]} files\r\n    * @return {void}\r\n    */\r\n    const onFileInputChange = async (files) => {\r\n        const file = files[0];\r\n        if (!file.name.includes('.csv')) {\r\n            addMessage('ERREUR', 'Le fichier doit être un .csv', 'error', 8000);\r\n            return;\r\n        }\r\n        await setFile(file);\r\n        const page = await _readFile(file);\r\n        const { newCustomers, newSuppliers } = await _readPage(page);\r\n        setCustomers(newCustomers);\r\n        setSuppliers(newSuppliers);\r\n        save(day, { customers: newCustomers, suppliers: newSuppliers });\r\n    }\r\n    /**\r\n    *\r\n    * @param {blob} blob\r\n    * @return {file}\r\n    */\r\n    const _readFile = async (blob) => {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsText(blob);\r\n            return new Promise((resolve) => {\r\n                reader.onload = (e) => {\r\n                    resolve(reader.result);\r\n                };\r\n            });\r\n        } catch (error) {\r\n            this._addMessage('ERREUR', error.message, 'error');\r\n            return false;\r\n        }\r\n    }\r\n    const _readPage = async (page) => {\r\n        const OFFSET_HEIGHT = 1; // does not include the column titles.\r\n        const lines = page.split(/\\r\\n|\\n/);\r\n        times(OFFSET_HEIGHT) (() => lines.shift());\r\n        // colNames\r\n        lines.shift().split(','); // removes and saves column titles.\r\n        /*\r\n        *\r\n        * customers = { clientId: { supplied, suppliedTotal, paid, paidTotal } }\r\n        * supplied = [ {name: 'itemName', 'price': price, 'supplierId': id } ] WHAT IS PAID\r\n        * paid = [ {name: 'itemName', 'price': price, 'supplierId': id } ]\r\n        *\r\n        * suppliers = { supplierId : { total } }\r\n        *\r\n        */\r\n        const newCustomers = [];\r\n        const newSuppliers = [];\r\n        while (lines.length) {\r\n            const currentLine = lines.shift().split(',');\r\n\r\n            /* DATA FILL\r\n            *   paid\r\n            *   currentLine[0] purchase - customerId\r\n            *   currentLine[1] purchase - supplierId\r\n            *   currentLine[2] purchase - item Name\r\n            *   currentLine[3] purchase - item Price\r\n            *   supplied\r\n            *   currentLine[4] payment - supplierId\r\n            *   currentLine[5] payment - customerId\r\n            *   currentLine[6] payment - item Name\r\n            *   currentLine[7] payment - item Price\r\n            */\r\n\r\n            if (currentLine[0]) { // CUSTOMER SIDE\r\n                newCustomers.push([Number(currentLine[0]), Number(currentLine[1]), currentLine[2], Number(currentLine[3])])\r\n            }\r\n            if (currentLine[4] && currentLine[5]) { // SUPPLIER SIDE\r\n                newSuppliers.push([Number(currentLine[4]), Number(currentLine[5]), currentLine[6], Number(currentLine[7])])\r\n            }\r\n        }\r\n        return { newCustomers, newSuppliers }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content input-page\">\r\n            <div className=\"title-area\">\r\n                <h1>{day}</h1>\r\n                <div className=\"form-button\">\r\n                    <FileInput label=\"Ajouter un Fichier\"\r\n                        className=\"noselect\"\r\n                        value={file}\r\n                        onChange={onFileInputChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"area-container\">\r\n                <div onKeyDown={cKeyDownHandler} className=\"group-input customers\">\r\n                    <div className=\"col-titles\">\r\n                        <div className=\"number\">Client</div><div className=\"number\">Fournisseur</div><div className=\"string\">Article</div><div className=\"number\">Prix</div>\r\n                    </div>\r\n                    {customers.map((customer, index) => {\r\n                        return (\r\n                            <div className=\"customer-row row\" key={'customer_'+index}>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(index, 0, event.target.value) }} value={customer[0]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(index, 1, event.target.value) }} value={customer[1]}/>\r\n                                <input className=\"string-input\" onChange={event => { setCustomerValue(index, 2, event.target.value) }} value={customer[2]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(index, 3, event.target.value) }} value={customer[3]}/>€\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"customer-row row\">\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(false, 0, event.target.value) }} value={newCustomer[0]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(false, 1, event.target.value) }} value={newCustomer[1]}/>\r\n                        <input className=\"string-input\" onChange={event => { setCustomerValue(false, 2, event.target.value) }} value={newCustomer[2]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setCustomerValue(false, 3, event.target.value) }} value={newCustomer[3]}/>€\r\n                    </div>\r\n                    <div>\r\n                        appuiez sur 'Entrer' pour sauver la dernière ligne.\r\n                    </div>\r\n                </div>\r\n                <div onKeyDown={sKeyDownHandler} className=\"group-input suppliers\">\r\n                    <div className=\"col-titles\">\r\n                        <div className=\"number\">Fournisseur</div><div className=\"number\">Client</div><div className=\"string\">Article</div><div className=\"number\">Prix</div>\r\n                    </div>\r\n                    {suppliers.map((supplier, index) => {\r\n                        return (\r\n                            <div className=\"supplier-row row\" key={'supplier_'+index}>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(index, 0, event.target.value) }} value={supplier[0]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(index, 1, event.target.value) }} value={supplier[1]}/>\r\n                                <input className=\"string-input\" onChange={event => { setSupplierValue(index, 2, event.target.value) }} value={supplier[2]}/>\r\n                                <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(index, 3, event.target.value) }} value={supplier[3]}/>€\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"supplier-row row\">\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(false, 0, event.target.value) }} value={newSupplier[0]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(false, 1, event.target.value) }} value={newSupplier[1]}/>\r\n                        <input className=\"string-input\" onChange={event => { setSupplierValue(false, 2, event.target.value) }} value={newSupplier[2]}/>\r\n                        <input className=\"number-input\" pattern=\"[0-9]*\" type=\"number\" onChange={event => { setSupplierValue(false, 3, event.target.value) }} value={newSupplier[3]}/>€\r\n                    </div>\r\n                    <div>\r\n                        appuiez sur 'Entrer' pour sauver la dernière ligne.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayForm;","import React, { useState, useEffect } from \"react\";\r\nimport \"./EventForm.css\";\r\n\r\n/*\r\n * All the inputs to register the expenses of the event.\r\n */\r\nfunction EventForm({ eventExpenses, dailyAccounting, ticketPrice, dayList, save }) {\r\n\r\n    const [eventExpensesState, setEventExpensesState] = useState(eventExpenses || {});\r\n    const [ticketP, setTicketP] = useState(ticketPrice || 0);\r\n    const [dailyAccountingState, setDailyAccountingState] = useState(dailyAccounting || {});\r\n\r\n    // the names are only relevant in this context, the parent component will just make a sum of all those expenses.\r\n    const EXPENSE_TYPES = ['Salle', 'Transactions', 'Assurance', 'Papeterie', 'Timbres', 'Courses', 'Traiteur', 'Schmitz', 'Autre'];\r\n\r\n    useEffect(() => {\r\n        // willMount\r\n        return () => {\r\n            // willUnMount\r\n            save({\r\n                eventExpenses: eventExpensesState,\r\n                ticketPrice: ticketP,\r\n                dailyAccounting: dailyAccountingState,\r\n            });\r\n        }\r\n    }, [save, eventExpensesState, ticketP, dailyAccountingState]);\r\n\r\n    function setTombolaTickets(day, value) {\r\n        const dailyState = Object.assign({}, dailyAccountingState);\r\n        if (!dailyState[day]) {\r\n            dailyState[day] = {};\r\n        }\r\n\r\n        dailyState[day].tombolaTickets = value;\r\n        setDailyAccountingState(dailyState);\r\n    }\r\n\r\n    function getTombolaTicketValue(day) {\r\n        if (dailyAccountingState && dailyAccountingState[day]) {\r\n            return dailyAccountingState[day].tombolaTickets || 0;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function setExpense(expense, value) {\r\n        const accountingState = Object.assign({}, eventExpensesState);\r\n        accountingState[expense] = value;\r\n        setEventExpensesState(accountingState);\r\n    }\r\n\r\n    function getExpenseValue(expense) {\r\n        return eventExpensesState[expense] || 0;\r\n    }\r\n\r\n    function renderEventExpenses() {\r\n        return (\r\n            <div className=\"input-grid left\">\r\n                {EXPENSE_TYPES.map(expense => {\r\n                    return (\r\n                        <div>\r\n                            <span className=\"accounting-span\">{expense}: </span>\r\n                            <input className=\"accounting-input\" onChange={event => { setExpense(expense, Number(event.target.value)) }} pattern=\"[0-9]*\" type=\"number\" value={getExpenseValue(expense)}/> €\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDailyAccounting() {\r\n        return (\r\n            <div className=\"input-grid right\">\r\n                <div>\r\n                    <span className=\"accounting-span\"> Prix des tickets: </span>\r\n                    <input className=\"accounting-input\" onChange={event => { setTicketP(Number(event.target.value)) }} pattern=\"[0-9]*\" type=\"number\" value={ticketP}/>€\r\n                </div>\r\n                {dayList.map(day => {\r\n                    return(<div>\r\n                        <h3>{day}</h3>\r\n                        <div>\r\n                            <span className=\"accounting-span\"> Tickets de tombola: </span>\r\n                            <input className=\"accounting-input\" onChange={event => { setTombolaTickets(day, Number(event.target.value)) }} pattern=\"[0-9]*\" type=\"number\" value={getTombolaTicketValue(day)}/>\r\n                        </div>\r\n                    </div>\r\n                )})}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"form\">\r\n                {renderEventExpenses()}\r\n                {renderDailyAccounting()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventForm;\r\n","import React from 'react';\r\nimport './Marche.css';\r\n\r\nimport { newId, zip } from '../../utils/utils.js';\r\nimport NavBar from '../NavBar/NavBar.js';\r\nimport Popups from '../Popups/Popups.js';\r\nimport PageData from '../PageData/PageData.js';\r\nimport DayForm from '../DayForm/DayForm.js';\r\nimport EventForm from '../EventForm/EventForm.js';\r\n\r\nclass Marche extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.DAYS = ['Vendredi', 'Samedi', 'Dimanche']; // const\r\n        this.state = {\r\n            files: {}, // { dayName: file, }\r\n            daysRawData: Object.fromEntries(zip(this.DAYS, Array(3).fill({'customers': [], 'suppliers': []}))),\r\n            days: [], // { dayName, customers, missedPayments, dailyLoss, customersAverage, obtainedAverage }\r\n            suppliers: {}, // { supplierId : { total } }\r\n            resetRequested: false, // toggle for the confirm/cancel buttons for removing files\r\n            showForm: false, // toggle for the accounting/event input form\r\n            showDayForm: false, // false or this.DAYS[*]\r\n            displayHelp: false, // toggle the \"help\" box\r\n            eventExpenses: {}, // {expenseName: <int>amount}\r\n            dailyAccounting: {}, // { dayName: {valuesDict} }\r\n            supplierTotal: 0,\r\n            costTotal: 0,\r\n            ticketPrice: 0,\r\n            popupIds: [],\r\n            popups: {}, // {content, type}\r\n        };\r\n    }\r\n\r\n    loadSave = async () => {\r\n        const saved = localStorage.getItem('saved-state');\r\n        if (saved) {\r\n            await this.setState(JSON.parse(saved));\r\n        }\r\n        await this._addMessage('Chargé', 'La dernière sauvegarde à été chargée', 'info', 5000);\r\n        await this._computeResults();\r\n    }\r\n    saveState = async () => {\r\n        localStorage.setItem('saved-state', JSON.stringify({\r\n            daysRawData: this.state.daysRawData,\r\n            eventExpenses: this.state.eventExpenses,\r\n            dailyAccounting: this.state.dailyAccounting,\r\n            ticketPrice: this.state.ticketPrice,\r\n        }));\r\n        await this._addMessage('Sauvegardé', 'Les informations ont été sauvegardées', 'info', 5000);\r\n    }\r\n    setDayRawData = async (day, data) => {\r\n        const daysRawData = Object.assign({}, this.state.daysRawData);\r\n        daysRawData[day] = data;\r\n        await this.setState({ daysRawData });\r\n    }\r\n    /**\r\n     *\r\n     * @param {String} title\r\n     * @param {String} content text content of the message\r\n     * @param {String} [type] info | error\r\n     * @param {Number} [duration] amount of ms\r\n     */\r\n    _addMessage = async (title, content, type, duration) => {\r\n        duration = duration || 5000;\r\n        type = type || 'info';\r\n        const id = newId('message');\r\n        await this.setState({\r\n            popupIds: this.state.popupIds.concat(id),\r\n            popups: Object.assign({}, this.state.popups, {\r\n                [id]: {\r\n                    title,\r\n                    content,\r\n                    type,\r\n                },\r\n            }),\r\n        });\r\n        setTimeout(async () => {\r\n            const newPopupIds = this.state.popupIds.filter((filterId) => {\r\n                return filterId !== id;\r\n            });\r\n            const newPopups = Object.assign({}, this.state.popups);\r\n            delete newPopups[id];\r\n            await this.setState({\r\n                popupIds: newPopupIds,\r\n                popups: newPopups,\r\n            });\r\n        }, duration);\r\n    }\r\n    /**\r\n     * Extracts values from day raw data.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    _processDays = async () => {\r\n        const days = [];\r\n        let suppliers = {};\r\n        let supplierTotal = 0;\r\n        for (const [dayName, dayRaw] of Object.entries(this.state.daysRawData)) {\r\n            const result = this._computeDay({ dayName, dayRaw, suppliers });\r\n            suppliers = result.suppliers;\r\n            days.push(result.day);\r\n        }\r\n        Object.values(suppliers).forEach(val => supplierTotal += val.total);\r\n        return { days, suppliers, supplierTotal };\r\n    }\r\n    /**\r\n     *\r\n     * @param {Object} param0\r\n     * @param {String} param0.dayName\r\n     * @param {Object} param0.dayRaw\r\n     * @param {Object} param0.suppliers\r\n     */\r\n    _computeDay = ({ dayName, dayRaw, suppliers }) => {\r\n\r\n            /* DATA FILL\r\n            *   paid\r\n            *   rawCustomers[*][0] purchase - customerId\r\n            *   rawCustomers[*][1] purchase - supplierId\r\n            *   rawCustomers[*][2] purchase - item Name\r\n            *   rawCustomers[*][3] purchase - item Price\r\n            *   supplied\r\n            *   rawSuppliers[*][0] payment - supplierId\r\n            *   rawSuppliers[*][1] payment - customerId\r\n            *   rawSuppliers[*][2] payment - item Name\r\n            *   rawSuppliers[*][3] payment - item Price\r\n            */\r\n            const rawCustomers = dayRaw.customers;\r\n            const rawSuppliers = dayRaw.suppliers;\r\n            const customers = {};\r\n\r\n            for (const rawCustomer of rawCustomers) {\r\n                if (rawCustomer[0]) { // CUSTOMER SIDE\r\n                    // creates the customer if it doesn't already exist.\r\n                    customers[rawCustomer[0]] = customers[rawCustomer[0]] || {\r\n                        paid: [],\r\n                        paidTotal: 0,\r\n                        supplied: [],\r\n                        suppliedTotal: 0,\r\n                    };\r\n                    // adds the total paid by the customer\r\n                    customers[rawCustomer[0]].paidTotal += Number(rawCustomer[3]) || 0;\r\n                    // adds a line for what the customer paid\r\n                    customers[rawCustomer[0]].paid.push({\r\n                        name: rawCustomer[2],\r\n                        price: rawCustomer[3],\r\n                        supplierId: rawCustomer[1],\r\n                    });\r\n                }\r\n            }\r\n            for (const rawSupplier of rawSuppliers) {\r\n                if (rawSupplier[0] && rawSupplier[1]) { // SUPPLIER SIDE\r\n                    customers[rawSupplier[1]] = customers[rawSupplier[1]] || {\r\n                        paid: [],\r\n                        paidTotal: 0,\r\n                        supplied: [],\r\n                        suppliedTotal: 0,\r\n                    };\r\n                    // adds the total paid by the customer\r\n                    customers[rawSupplier[1]].suppliedTotal += Number(rawSupplier[3]) || 0;\r\n                    // adds a line for what the customer recieved (not a guarantee of payment)\r\n                    customers[rawSupplier[1]].supplied.push({\r\n                        name: rawSupplier[2],\r\n                        price: rawSupplier[3],\r\n                        supplierId: rawSupplier[0],\r\n                    });\r\n                    // computes the total value of supplied by the supplier.\r\n                    suppliers[rawSupplier[0]] = suppliers[rawSupplier[0]] || { total: 0 };\r\n                    suppliers[rawSupplier[0]].total += Number(rawSupplier[3]) || 0;\r\n                }\r\n            }\r\n\r\n        const { missedPayments, dailyLoss, customersAverage, obtainedAverage } = this._computeDailyStats(customers);\r\n        return {day: { dayName, customers, missedPayments, dailyLoss, customersAverage, obtainedAverage }, suppliers };\r\n    }\r\n    _computeDailyStats = (customers) => {\r\n        const missedPayments = {};\r\n        let dailyLoss = 0;\r\n        let customersTotal = 0;\r\n        let obtainedTotal = 0;\r\n        const customerKeys = Object.keys(customers);\r\n        for (const customerId of customerKeys) {\r\n            const customerPaid = customers[customerId].paidTotal;\r\n            const customerSupplied = customers[customerId].suppliedTotal;\r\n            const balance =  customerSupplied - customerPaid;\r\n            obtainedTotal += Number(customerSupplied);\r\n            customersTotal += Number(customerPaid);\r\n            if (balance !== 0) {\r\n                missedPayments[customerId] = balance;\r\n                dailyLoss += balance;\r\n            }\r\n        }\r\n        const customersAverage = customersTotal / (customerKeys.length || 0);\r\n        const obtainedAverage = obtainedTotal / (customerKeys.length || 0);\r\n        return { missedPayments, dailyLoss, customersTotal, customersAverage, obtainedAverage };\r\n    }\r\n    /**\r\n    * Brief description of the function here.\r\n    *\r\n    * @return {Object[]} [{content, className, fa, callBack}]\r\n    */\r\n    _getButtons() {\r\n\r\n        // MAIN\r\n        const buttons = [\r\n            {className: ((this.state.showForm ? 'active' : '') + ' purple'), fa: 'fa-eur', content: 'Comptabilité', callBack: this.toggleEventForm},\r\n        ]\r\n\r\n        // ADD DAYS\r\n        for (const day of this.DAYS) {\r\n            buttons.push({\r\n                className: ((this.state.showDayForm === day ? 'active' : '') + ' green'),\r\n                fa: 'fa-calendar',\r\n                callBack: () => { this.toggleDay(day) },\r\n                content: day,\r\n            });\r\n        }\r\n\r\n        // REMOVE FILES\r\n        let resetButtons = [{content: 'Tout effacer', fa: 'fa-trash', className: 'warning', callBack: this.toggleReset}];\r\n        if (this.state.resetRequested) {\r\n            resetButtons = [\r\n                {content: 'Annuler', fa: 'fa-times', className: 'green', callBack: this.toggleReset},\r\n                {content: 'Confirmer', fa: 'fa-check', className: 'alert', callBack: this.clearAll},\r\n            ];\r\n        }\r\n        buttons.push(...resetButtons);\r\n\r\n        // COMPUTE\r\n        if (Object.keys(this.state.daysRawData).length && !this.state.showForm && !this.state.resetRequested) {\r\n            buttons.push({ content: 'Calculer', fa: 'fa-plus', className: 'green', callBack: this._computeResults });\r\n        }\r\n\r\n        buttons.push(...[\r\n            { content: 'Aide', fa: 'fa-info-circle', className: 'blue order-2 ml-auto', callBack: this._toggleHelp },\r\n            { content: 'Charcher', fa: 'fa-info-circle', className: 'green order-2', callBack: this.loadSave },\r\n            { content: 'Sauvegarder', fa: 'fa-info-circle', className: 'green order-2', callBack: this.saveState },\r\n        ]);\r\n        return buttons;\r\n    }\r\n\r\n    ////////////////// //////// //////////////////\r\n    ////////////////// HANDLERS //////////////////\r\n    ////////////////// //////// //////////////////\r\n\r\n    /**\r\n    * Handler for event form.\r\n    */\r\n    onEventFormSave = async ({ eventExpenses, dailyAccounting, ticketPrice }) => {\r\n        let costTotal = 0;\r\n        Object.values(eventExpenses).forEach(val => costTotal += val);\r\n        await this.setState({ eventExpenses, ticketPrice, dailyAccounting, costTotal });\r\n    }\r\n    /**\r\n    * processes the files and updates the state.\r\n    */\r\n    _computeResults = async () => {\r\n        const { days, suppliers, supplierTotal } = await this._processDays();\r\n        await this.setState({ days, suppliers, supplierTotal });\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    clearAll = async () => {\r\n        await this.setState({\r\n            daysRawData: Object.fromEntries(zip(this.DAYS, Array(3).fill({'customers': [], 'suppliers': []}))),\r\n            showDayForm: false,\r\n            eventExpenses: {},\r\n            dailyAccounting: {},\r\n            supplierTotal: 0,\r\n            costTotal: 0,\r\n            ticketPrice: 0,\r\n        });\r\n        await this._computeResults();\r\n        await this._addMessage('', 'Tout le contenu a été réinitialisé', 'error', 5000);\r\n        await this.toggleReset();\r\n    }\r\n    /**\r\n    *\r\n    */\r\n   toggleDay = async (day) => {\r\n        const isSameDay = this.state.showDayForm === day;\r\n        await this.setState({ showDayForm: false });\r\n        if (!isSameDay) {\r\n            await this.setState({ showDayForm: day });\r\n        }\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    toggleReset = async () => {\r\n        await this.setState({ resetRequested: !this.state.resetRequested });\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    toggleEventForm = async () => {\r\n        const isOpen = this.state.showForm;\r\n        await this.setState({ showForm: !isOpen });\r\n        if (isOpen) {\r\n            this._computeResults();\r\n        }\r\n    }\r\n    /**\r\n    *\r\n    */\r\n    _toggleHelp = async () => {\r\n        await this.setState({ displayHelp: !this.state.displayHelp });\r\n    }\r\n    /**\r\n     * add encodage popup with button toggle\r\n     * location salle, location bancontact et frais de transaction, assurance, papetrie, timbres, courses restaurant, traiteur, schmitz\r\n     * form component with callback to change state here with new data.\r\n     *\r\n     * Add full data (all prices + price computation)\r\n     *\r\n     */\r\n    render() {\r\n        return <div>\r\n            <NavBar\r\n                buttons={this._getButtons()}\r\n            />\r\n            {!!this.state.popupIds.length &&\r\n                <Popups messageIds={this.state.popupIds} messages={this.state.popups}/>\r\n            }\r\n            {!! this.state.displayHelp &&\r\n                <div className=\"help\">\r\n                    <div className=\"help-link ml-auto\">\r\n                        <a className=\"help-text\" target=\"new\" href=\"https://docs.google.com/spreadsheets/d/1UKT38_RUa3MQ_HEGtWgaPKvedD35wYksaj7-T0sc9N8/edit?usp=sharing\">\r\n                            Fiche à remplire\r\n                        </a>\r\n                        <i className=\"fa fa-file-excel-o\"/>\r\n                    </div>\r\n                    <div className=\"help-link ml-auto\">\r\n                        <a className=\"help-text\" target=\"new\" href=\"https://drive.google.com/file/d/18Cs7Gyetq9kGnfS8gg4BnLfDHVo5YATV/view?usp=sharing\">\r\n                            Vidéo d'explication\r\n                        </a>\r\n                        <i className=\"fa fa-play\"/>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {!!this.DAYS.includes(this.state.showDayForm) && (\r\n                <DayForm day={this.state.showDayForm} dayRawData={this.state.daysRawData[this.state.showDayForm]} save={this.setDayRawData} addMessage={this._addMessage}/>\r\n            )}\r\n            {!!this.state.showForm ? (\r\n                <EventForm\r\n                    eventExpenses={this.state.eventExpenses}\r\n                    dailyAccounting={this.state.dailyAccounting}\r\n                    dayList={this.DAYS}\r\n                    ticketPrice={this.state.ticketPrice}\r\n                    save={this.onEventFormSave}\r\n                />\r\n            ) : (\r\n                <PageData\r\n                    days={this.state.days}\r\n                    dailyAccounting={this.state.dailyAccounting}\r\n                    ticketPrice={this.state.ticketPrice}\r\n                    costTotal={this.state.costTotal}\r\n                    supplierTotal={this.state.supplierTotal}\r\n                />\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Marche;\r\n","import React, { useState } from \"react\";\nimport Accueil from \"./components/Accueil/Accueil.js\";\nimport Marche from \"./components/Marche/Marche.js\";\nimport \"./App.css\";\n\nfunction App(props) {\n    const [state, setState] = useState({ open: false });\n\n    function toggleApp() {\n        setState({ open: !state.open });\n    }\n\n    return (\n        <div className=\"page\">\n            {state.open ? (\n                <div className=\"page\">\n                    <Marche menu=\"\"/>\n                </div>\n            ) : (\n                <div className=\"page clickable\" onClick={toggleApp}>\n                    <Accueil/>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// turn service worker off\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}